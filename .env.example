# MemFuse example environment

# --- Postgres ---
POSTGRES_USER=memfuse
POSTGRES_PASSWORD=memfuse
POSTGRES_DB=memfuse
PGHOST=localhost
PGPORT=5432
DATABASE_URL=postgresql://memfuse:memfuse@localhost:5432/memfuse

# --- Embeddings (Jina AI) ---
# Get a key from https://jina.ai/ (or leave blank to run tests with mocks)
JINA_API_KEY=
EMBEDDING_MODEL=jina-embeddings-v3
EMBEDDING_DIM=1024

# --- LLM (OpenAI-compatible) ---
# If you use OpenAI, set OPENAI_API_KEY only and leave BASE_URL empty.
# If you use an OpenAI-compatible service, set both BASE_URL and API_KEY.
OPENAI_API_KEY=
OPENAI_BASE_URL=
OPENAI_COMPATIBLE_MODEL=gpt-4o-mini
OPENAI_ASSISTANT_ROLE=assistant

# --- RAG settings ---
RAG_TOP_K=5
RETRIEVAL_PREFER_SESSION=true

# --- Context limits (defaults are demo-friendly) ---
USER_INPUT_MAX_TOKENS=2048
TOTAL_CONTEXT_MAX_TOKENS=4096
HISTORY_MAX_TOKENS=1024
HISTORY_FETCH_ROUNDS=200

# --- Phase 2 (Structured Memory) ---
STRUCTURED_ENABLED=false
STRUCTURED_TOP_K=10
EXTRACTOR_ENABLED=false
# Extract when a single round exceeds this token count, or accumulated rounds do
EXTRACTOR_TRIGGER_TOKENS=2000
# Top-K similar facts to consider for dedup/contradictions in extractor
EXTRACTOR_DEDUP_TOP_K=10

# --- Optional system prompt override ---
# SYSTEM_PROMPT="You are MemFuse, a helpful assistant..."

# --- Phase 4 (Procedural / Multi-Agent) ---
M3_ENABLED=false
PROCEDURAL_TOP_K=5
PROCEDURAL_REUSE_THRESHOLD=0.9
